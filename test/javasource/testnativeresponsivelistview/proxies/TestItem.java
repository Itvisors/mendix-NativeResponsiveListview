// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testnativeresponsivelistview.proxies;

public class TestItem implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject testItemMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestNativeResponsiveListview.TestItem";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Index("Index"),
		TestItem_TestContainer("TestNativeResponsiveListview.TestItem_TestContainer");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestItem(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected TestItem(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testItemMendixObject)
	{
		if (testItemMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, testItemMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.testItemMendixObject = testItemMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static testnativeresponsivelistview.proxies.TestItem initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testnativeresponsivelistview.proxies.TestItem(context, mendixObject);
	}

	public static testnativeresponsivelistview.proxies.TestItem load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testnativeresponsivelistview.proxies.TestItem.initialize(context, mendixObject);
	}

	/**
	 * @return value of Index
	 */
	public final java.lang.Integer getIndex()
	{
		return getIndex(getContext());
	}

	/**
	 * @param context
	 * @return value of Index
	 */
	public final java.lang.Integer getIndex(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Index.toString());
	}

	/**
	 * Set value of Index
	 * @param index
	 */
	public final void setIndex(java.lang.Integer index)
	{
		setIndex(getContext(), index);
	}

	/**
	 * Set value of Index
	 * @param context
	 * @param index
	 */
	public final void setIndex(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer index)
	{
		getMendixObject().setValue(context, MemberNames.Index.toString(), index);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of TestItem_TestContainer
	 */
	public final testnativeresponsivelistview.proxies.TestContainer getTestItem_TestContainer() throws com.mendix.core.CoreException
	{
		return getTestItem_TestContainer(getContext());
	}

	/**
	 * @param context
	 * @return value of TestItem_TestContainer
	 * @throws com.mendix.core.CoreException
	 */
	public final testnativeresponsivelistview.proxies.TestContainer getTestItem_TestContainer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testnativeresponsivelistview.proxies.TestContainer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TestItem_TestContainer.toString());
		if (identifier != null) {
			result = testnativeresponsivelistview.proxies.TestContainer.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of TestItem_TestContainer
	 * @param testitem_testcontainer
	 */
	public final void setTestItem_TestContainer(testnativeresponsivelistview.proxies.TestContainer testitem_testcontainer)
	{
		setTestItem_TestContainer(getContext(), testitem_testcontainer);
	}

	/**
	 * Set value of TestItem_TestContainer
	 * @param context
	 * @param testitem_testcontainer
	 */
	public final void setTestItem_TestContainer(com.mendix.systemwideinterfaces.core.IContext context, testnativeresponsivelistview.proxies.TestContainer testitem_testcontainer)
	{
		if (testitem_testcontainer == null) {
			getMendixObject().setValue(context, MemberNames.TestItem_TestContainer.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.TestItem_TestContainer.toString(), testitem_testcontainer.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return testItemMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testnativeresponsivelistview.proxies.TestItem that = (testnativeresponsivelistview.proxies.TestItem) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
